// <auto-generated />
using System;
using CollegeSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CollegeSystem.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20220811122854_first one")]
    partial class firstone
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CollegeSystem.Models.AcademicDay", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("scheduleID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("scheduleID");

                    b.ToTable("days");
                });

            modelBuilder.Entity("CollegeSystem.Models.Schedule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("schedules");
                });

            modelBuilder.Entity("CollegeSystem.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AcademicDayid")
                        .HasColumnType("int");

                    b.Property<int?>("Studentid")
                        .HasColumnType("int");

                    b.Property<int>("academicYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("term")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcademicDayid");

                    b.HasIndex("Studentid");

                    b.ToTable("subjects");
                });

            modelBuilder.Entity("CollegeSystem.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("Createdon")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("gender")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("CollegeSystem.Models.Student", b =>
                {
                    b.HasBaseType("CollegeSystem.Models.User");

                    b.Property<int>("academicYear")
                        .HasColumnType("int");

                    b.Property<int>("classNumber")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("CollegeSystem.Models.AcademicDay", b =>
                {
                    b.HasOne("CollegeSystem.Models.Schedule", null)
                        .WithMany("days")
                        .HasForeignKey("scheduleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CollegeSystem.Models.Subject", b =>
                {
                    b.HasOne("CollegeSystem.Models.AcademicDay", null)
                        .WithMany("subjects")
                        .HasForeignKey("AcademicDayid");

                    b.HasOne("CollegeSystem.Models.Student", null)
                        .WithMany("subjects")
                        .HasForeignKey("Studentid");
                });

            modelBuilder.Entity("CollegeSystem.Models.AcademicDay", b =>
                {
                    b.Navigation("subjects");
                });

            modelBuilder.Entity("CollegeSystem.Models.Schedule", b =>
                {
                    b.Navigation("days");
                });

            modelBuilder.Entity("CollegeSystem.Models.Student", b =>
                {
                    b.Navigation("subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
